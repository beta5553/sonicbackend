schema {
    query: Query
    mutation: Mutation
}

#type Query {
#    user(id: Int): User
#    allUsers: [User]
#    post(id: Int): Post
#    allPosts: [Post]
#    track(id: Int): Track
#    allTracks: [Track]
#}
#

type Mutation {
    deleteUser(id: Int): User
    createUser(firstName: String, lastName: String, userName: String, email: String, password: String, biography: String): User
    updateUser(id: Int, firstName: String, lastName: String, userName: String, email: String, password: String, biography: String): User
}

type Query {
    user(id: Int): User
    allUsers: [User]
    post(id: Int): Post
    allPosts: [Post]
    track(id: Int): Track
    allTracks: [Track]
}

input UserInput {
    userId: Int

}

input PostInput {
    postId: Int
}

input TrackInput {
    trackId: Int
}

type Track {
    trackId: Int
    userId: Int
    postId: Int
    reproductions: Int
    price: Float
    location: String
    format: String
    description: String
    likes: Int
    createdDate: String
}

type User {
    userId: Int
    userName: String
    password: String
    firstName: String
    lastName: String
    biography: String
    email: String
    createdDate: String
}

type Post {
    postId: Int
    userId: Int
    postTitle: String
    postContent: String
    trackId: String
    coverImage: String
    createdDate: String
}
